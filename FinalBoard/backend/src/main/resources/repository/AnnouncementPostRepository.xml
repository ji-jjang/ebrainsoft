<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
  namespace="com.juny.finalboard.domain.post.announcement.repository.AnnouncementPostRepository">

  <delete id="deleteAnnouncementPostById" parameterType="long">
    DELETE
    FROM announcement_posts
    WHERE id = #{id}
  </delete>

  <insert id="save" keyProperty="id" parameterType="AnnouncementPost" useGeneratedKeys="true">
    INSERT INTO announcement_posts (title, content, password, view_count, is_pinned, created_by,
                                    created_at, category_id)
    VALUES (#{title}, #{content}, #{password}, #{viewCount}, #{isPinned}, #{createdBy},
            #{createdAt}, #{announcementCategory.id});
  </insert>

  <resultMap id="PostDetailResultMap"
    type="com.juny.finalboard.domain.post.announcement.entity.AnnouncementPost">

    <id column="post_id" property="id"/>
    <result column="post_is_pinned" property="isPinned"/>
    <result column="post_created_by" property="createdBy"/>
    <result column="post_created_at" javaType="java.time.LocalDateTime" property="createdAt"/>
    <result column="post_created_by" property="createdBy"/>

    <result column="post_title" property="title"/>
    <result column="post_content" property="content"/>
    <result column="post_view_count" property="viewCount"/>

    <association javaType="com.juny.finalboard.domain.post.announcement.entity.AnnouncementCategory"
      property="announcementCategory">
      <result column="category_name" property="name"/>
    </association>

  </resultMap>


  <select id="getTotalAnnouncementPostCount" parameterType="SearchCondition" resultType="long">
    SELECT
    COUNT(*)
    FROM
    announcement_posts p
    INNER JOIN
    announcement_categories c
    ON
    p.category_id = c.id
    <include refid="announcementPostListWhereClause"/>
  </select>

  <select id="findAllWithCategoryBySearchCondition" parameterType="SearchCondition"
    resultMap="PostDetailResultMap">
    SELECT
    p.id AS post_id,
    p.title AS post_title,
    p.content AS post_content,
    p.view_count AS post_view_count,
    p.is_pinned AS post_is_pinned,
    p.created_by AS post_created_by,
    DATE_FORMAT(p.created_at, '%Y-%m-%d %H:%i:%s') AS post_created_at,
    c.name AS category_name

    FROM
    announcement_posts p
    INNER JOIN
    announcement_categories c ON p.category_id = c.id
    <include refid="announcementPostListWhereClause"/>
    ORDER BY
    p.is_pinned DESC,
    ${sort}
    LIMIT
    #{pageSize} OFFSET #{offset}
  </select>

  <select id="findPostDetailById" parameterType="long" resultMap="PostDetailResultMap">
    SELECT p.id                                           AS post_id,
           p.title                                        AS post_title,
           p.content                                      AS post_content,
           p.view_count                                   AS post_view_count,
           p.is_pinned                                    AS post_is_pinned,
           p.created_by                                   AS post_created_by,
           DATE_FORMAT(p.created_at, '%Y-%m-%d %H:%i:%s') AS post_created_at,
           c.name                                         AS category_name

    FROM announcement_posts p
           INNER JOIN
         announcement_categories c ON p.category_id = c.id

    WHERE p.id = #{id}
  </select>

  <sql id="announcementPostListWhereClause">
    WHERE 1 = 1

    <if test="categoryName != null and categoryName != ''">
      AND c.name = #{categoryName}
    </if>

    <if test="keyword != null and keyword != ''">
      AND (
      p.title LIKE CONCAT('%', #{keyword}, '%')
      OR p.created_by LIKE CONCAT('%', #{keyword}, '%')
      OR p.content LIKE CONCAT('%', #{keyword}, '%')
      )
    </if>

    <if test="startDate != null and startDate != ''">
      AND p.created_at &gt;= #{startDate}
    </if>
    <if test="endDate != null and endDate != ''">
      AND p.created_at &lt;= #{endDate}
    </if>
  </sql>

  <update id="updatePost"
    parameterType="com.juny.finalboard.domain.post.announcement.entity.AnnouncementPost">
    UPDATE
      announcement_posts
    SET title       = #{title},
        content     = #{content},
        is_pinned   = #{isPinned},
        created_by  = #{createdBy},
        category_id = #{announcementCategory.id}
    WHERE id = #{id}
  </update>

</mapper>